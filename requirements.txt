#begin
#new user
ssh -i ~/Downloads/rahulkey.pem ubuntu@ec2-54-90-112-29.compute-1.amazonaws.com
# old user
#ssh -v -i rahulkey.pem ec2-user@ec2-54-243-61-145.compute-1.amazonaws.com

#follow http://www.lennu.net/2012/05/14/django-deployement-installation-to-ubuntu-12-dot-04-server/

#install prereq for python
sudo apt-get update
sudo apt-get upgrade

echo "djangoserver" > /etc/hostname
hostname -F /etc/hostname
echo -e "\n127.0.0.1 djangoserver.local djangoserver\n" >> /etc/hosts

apt-get -y install apache2-mpm-worker apache2-dev
apt-get -y install python python-dev python-setuptools
easy_install virtualenv virtualenvwrapper pip


wget http://modwsgi.googlecode.com/files/mod_wsgi-3.4.tar.gz
tar xvfz mod_wsgi-3.4.tar.gz
cd mod_wsgi-3.4
./configure
make
make install
echo "LoadModule wsgi_module /usr/lib/apache2/modules/mod_wsgi.so" > /etc/apache2/mods-available/wsgi.load
a2enmod wsgi
a2dissite default


apt-get -y install mysql-server mysql-client
echo "CREATE DATABASE homes;" | mysql -u root -p
echo "CREATE USER 'eazyapacheuser'@'localhost' IDENTIFIED BY 'thebakery';" | mysql -u root -p
echo "GRANT ALL PRIVILEGES ON homes.* TO 'eazyapacheuser'@'localhost';" | mysql -u root -p
echo "FLUSH PRIVILEGES;" | mysql -u root -p

cd /srv/
mkdir -p my_project/app my_project/app/conf/apache
mkdir -p my_project/logs my_project/run/eggs
virtualenv my_project/venv
/srv/my_project/venv/bin/pip install django

#to upgrade /srv/my_project/venv/bin/pip install django --upgrade



#pushd my_project/app/
#/srv/my_project/venv/bin/python /srv/my_project/venv/bin/django-admin.py startproject webapp
#popd

mkdir -p my_project/app/webapp/site_media
mkdir -p my_project/app/templates
cd my_project/app/conf/apache/

vim django.wsgi

#Paste the following code into the editor and save it.
import os
import sys

root_path = os.path.abspath(os.path.join(os.path.dirname(__file__), '..', '..', '..'))
sys.path.insert(0, os.path.abspath(os.path.join(root_path, 'venv/lib/python2.7/site-packages/')))
sys.path.insert(0, os.path.abspath(os.path.join(root_path, 'app')))
sys.path.insert(0, os.path.abspath(os.path.join(root_path, 'app', 'Eazyhouz', 'mysite')))

os.environ['DJANGO_SETTINGS_MODULE'] = 'mysite.settings'

#import django.core.handlers.wsgi
#application = django.core.handlers.wsgi.WSGIHandler()
from django.core.wsgi import get_wsgi_application
application = get_wsgi_application()



#Create system user http://www.lennu.net/2012/05/14/django-deployement-installation-to-ubuntu-12-dot-04-server/
sudo useradd --system --no-create-home --home-dir /data/Eazyhouz/mysite/ --user-group eazyapacheuser
chsh -s /bin/bash eazyapacheuser
vim /etc/apache2/sites-available/eazyhouz.conf


#pasted file below


<VirtualHost *:80>
ServerAdmin root@eazyhouz
ServerName eazyhouz

Alias /site_media/ /srv/my_project/app/Eazyhouz/site_media/
#This alias interferes with the site
#Alias /static/ /srv/my_project/venv/lib/python2.7/site-packages/django/contrib/admin/static/
Alias /robots.txt /srv/my_project/app/Eazyhouz/site_media/robots.txt
Alias /favicon.ico /srv/my_project/app/webapp/site_media/favicon.ico

#CustomLog "|/usr/sbin/rotatelogs /srv/my_project/logs/access.log.%Y%m%d-%H%M%S 5M" combined
#ErrorLog "|/usr/sbin/rotatelogs /srv/my_project/logs/error.log.%Y%m%d-%H%M%S 5M"
LogLevel warn

WSGIDaemonProcess eazyhouz user=eazyapacheuser group=eazyapacheuser processes=1 threads=15 maximum-requests=10000 python-path=/srv/my_project/venv/lib/python2.7/site-packages python-eggs=/srv/my_project/run/eggs
WSGIProcessGroup eazyhouz
WSGIScriptAlias / /srv/my_project/app/conf/apache/django.wsgi

<Directory /srv/my_project/app/Eazyhouz/static/>
Order deny,allow
Allow from all
#Options -Indexes FollowSymLinks
</Directory>

<Directory /srv/my_project/app/conf/apache>
Order deny,allow
Allow from all
</Directory>

</VirtualHost>



#start new server
a2ensite eazyhouz
apt-get build-dep python-mysqldb
/srv/my_project/venv/bin/pip install MySQL-python


cd /srv/my_project/app/Eazyhouz/mysite/
sudo vim mysite/settings.py

DATABASES = {
  'default': {
      'ENGINE': 'django.db.backends.mysql',
      'NAME': 'homes',
      'USER': 'root',
      'PASSWORD': 'thebakery',
  }
}

MEDIA_ROOT = '/srv/my_project/app/webapp/site_media/'
TEMPLATE_DIRS = '/srv/my_project/app/templates/'


chown -R eazyapacheuser:eazyapacheuser /srv/my_project/
sudo service apache2 restart


sudo apt-get install git


#get git repo
cd ../../..
cd /data
git clone https://github.com/mrbhandari/Eazyhouz.git
cd Eazyhouz/mysite/

#activate virtual env
source /srv/my_project/venv/bin/activate
python manage.py runserver 0.0.0.0:80



vim django.wsgi 

import os
import sys

root_path = os.path.abspath(os.path.join(os.path.dirname(__file__), '..', '..', '..'))
sys.path.insert(0, os.path.abspath(os.path.join(root_path, 'venv/lib/python2.7/site-packages/')))
sys.path.insert(0, os.path.abspath(os.path.join(root_path, 'app')))
sys.path.insert(0, os.path.abspath(os.path.join(root_path, 'app', 'Eazyhouz', 'mysite')))

os.environ['DJANGO_SETTINGS_MODULE'] = 'mysite.settings'

import django.core.handlers.wsgi
application = django.core.handlers.wsgi.WSGIHandler()


#Switch to your local and send medicare file
scp -i rahulkey.pem medicare.tsv ubuntu@ec2-54-90-112-29.compute-1.amazonaws.com:~



#adding medicare table and creating the fields
mysql --local-infile -u root -p
thebakery
create database homes;


#create standard Django table
cd /srv/my_project/app/Eazyhouz/mysite
python manage.py migrate

source /srv/my_project/venv/bin/activate
sudo su
pip install numpy
pip install django-crispy-forms


#switch back to ec2 to load the data
#cp /home/ubuntu/medicare.tsv /data/medicare/medicare.tsv
#mysql --local-infile -u root -p
#thebakery
#use homes;
#LOAD DATA LOCAL INFILE '/data/medicare/medicare.tsv' into TABLE medicare LINES TERMINATED BY '\n';
#select count(*) from medicare;

#check output

#ALTER TABLE product_data_medicare ADD id int;
#add index speed up performance
#Create table for autosuggest

#Create table hcpcs_autosuggest select hcpcs_code, hcpcs_description from medicare group by hcpcs_code, hcpcs_description order by sum(num_uniq_users) desc;
#ALTER TABLE `medicare` ADD INDEX `hcpcs_code` (`hcpcs_code`);







xxxxxxxxxx


sudo apt-get install build-essential
sudo apt-get install libreadline-gplv2-dev libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev

#get python
mkdir ~/Downloads/
cd ~/Downloads/
wget http://python.org/ftp/python/2.7.5/Python-2.7.5.tgz
tar -xvf Python-2.7.5.tgz
cd Python-2.7.5
./configure
make
sudo make altinstall


#sudo sh

#instlall pip, distribute py, django
sudo apt-get install python-setuptools
cd ..
wget http://pypi.python.org/packages/source/p/pip/pip-1.1.tar.gz#md5=62a9f08dd5dc69d76734568a6c040508
tar -xvf pip*.gz
cd pip*
sudo python setup.py install
cd ..
wget http://python-distribute.org/distribute_setup.py
python distribute_setup.py
pip install Django


sudo apt-get install python2.7-dev
pip install beautifulsoup4
pip install python-devel

#yum install curl-devel expat-devel gettext-devel \openssl-devel zlib-devel
#yum install git-core
#yum install make
#yum install gcc
#yum install python27

#install setup tools
#wget http://pypi.python.org/packages/source/d/distribute/distribute-0.6.27.tar.gz
#tar xf distribute-0.6.27.tar.gz
#cd distribute-0.6.27
#python2.7 setup.py install
#easy_install-2.7 virtualenv

# Virtual env http://iamzed.com/2009/05/07/a-primer-on-virtualenv/
#sudo easy_install virtualenv
#cd /
#mkdir project
#cd project
#virtualenv --no-site-packages hugoFetch
#cd hugoFetch
#source bin/activate

# install packages
#pip install beautifulsoup4
#pip install Django
#http://blog.humaneguitarist.org/tag/amazon/
#yum install libxml2-devel #http://drunks-and-lampposts.com/2012/01/19/ec2-tutorials-installing-new-software-yum-pip-easy_install-sudo-apt/

apt-get install libxml2-dev libxslt1-dev python-dev
apt install libxml2-dev
apt install libxml2
apt install mysql-server
sudo apt-get install python-mysqldb

#apt install libxslt


#yum install libxslt-devel
pip install lxml


cd Eazyhouz/mysite/
mkdir temp

# to run hugo
#ldconfig /~/../usr
cd /srv/my_project/app/Eazyhouz/mysite
export DJANGO_SETTINGS_MODULE=mysite.settings


#install a real server
sudo apt-get install apache2
sudo aptitude install apache2 apache2.2-common apache2-mpm-prefork apache2-utils libexpat1 ssl-cert
sudo aptitude install libapache2-mod-wsgi
sudo service apache2 restart

#yum -y install httpd
#yum -y install mod_wsgi

#starting and restarting server
sudo service httpd start
sudo service httpd restart

#setting up a cron job
#cd /Eazyhouz/mysite/hugo_fetch2.py 
#shell script
#sudo sh
#cd /project/hugoFetch/
#source bin/activate
#cd /Eazyhouz/mysite/
#export DJANGO_SETTINGS_MODULE=mysite.settings
#python hugo_fetch2.py





apt-get -y install apache2-mpm-worker apache2-dev
easy_install virtualenv virtualenvwrapper

wget http://modwsgi.googlecode.com/files/mod_wsgi-3.4.tar.gz
tar xvfz mod_wsgi-3.4.tar.gz
cd mod_wsgi-3.4
./configure
make
make install
echo "LoadModule wsgi_module /usr/lib/apache2/modules/mod_wsgi.so" > /etc/apache2/mods-available/wsgi.load
a2enmod wsgi
a2dissite 000-default




#rahul local server start
#/opt/local/share/mysql5/mysql/mysql.server start


#FOr the Eazy houz project:
#After creating models
python manage.py syncdbs
#Get django version 1.7
pip install -U Django


python manage.py makemigrations search
python manage.py migrate




#new file
import os
import sys







#SCRAPING
sudo pip install Scrapy
sudo pip install w3lib
sudo pip install BeautifulSoup
